version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mypassword}
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-mydatabase}" ]
    networks:
      - spring-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    networks:
      - spring-network
    depends_on:
      - postgres

  app:
    build:
      context: .
      dockerfile: Dockerfile
#    image: moataz2001/examplatform-app-v1
    container_name: app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-mydatabase}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-mypassword}
    depends_on:
      - postgres
    networks:
      - spring-network
#    develop:
#      watch:
#        - action: rebuild
#          path: ./src
#          ignore:
#            - ./src/test
#          target: /app/src
#        - action: rebuild
#          path: ./pom.xml
#          target: /app/pom.xml

volumes:
  postgres-data:

networks:
  spring-network:
    driver: bridge